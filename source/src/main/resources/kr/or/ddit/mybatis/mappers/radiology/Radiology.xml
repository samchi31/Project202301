<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.radiology.dao.RadiologyDAO">
	
	<select id="selectRadiAllList" resultType="WaitHistoryVO" parameterType="hashMap">
		SELECT T.TRM_CD
		     , T.RCP_NO
		     , T.WAIT_NUM
		     , T.PA_NO
		     , T.PA_NAME
		     , T.PA_REG
		     , T.PA_SEX
		     , T.DIV_CD
		     , T.DIV_NM
		     , T.WAITST_CD
		     , T.WAITST_NM
		     , T.WAIT_DT
		     , LISTAGG(T.FILM_CD,',') WITHIN GROUP(ORDER BY T.FILM_CD) AS FILM_CD
		FROM
		(
				WITH waitView 
					AS (
					    SELECT  
					    	RCP_NO
					    	, MAX(WAIT_NUM) AS WAIT_NUM
					    FROM    
					    	V_WAIT_HIST
					    GROUP BY  RCP_NO 
					    )
				SELECT 
				      C.TRM_CD
				    , A.RCP_NO
				    , A.WAIT_NUM
				    , A.PA_NO
				    , A.PA_NAME
				    , A.PA_REG
		     		, A.PA_SEX
				    , A.DIV_CD
				    , A.DIV_NM    
				    , A.WAITST_CD
				    , A.WAITST_NM
				    , TO_CHAR(A.WAIT_DT, 'YYYY-MM-DD') AS WAIT_DT
				    , D.FILM_CD
				FROM    
				    V_WAIT_HIST A   
				INNER JOIN waitView B ON(A.RCP_NO = B.RCP_NO AND A.WAIT_NUM = B.WAIT_NUM)
				INNER JOIN TRM_CHART C ON(B.RCP_NO = C.RCP_NO)
				LEFT OUTER JOIN FILM_ORDER D ON(C.TRM_CD = D.TRM_CD)
				WHERE 1 = 1
<!-- 				    AND A.WAITST_CD = 'WS001' -->
				    AND A.DIV_CD = 'DV002'
				    AND D.FILM_SELECTED IS NULL
				    AND TO_CHAR(RCP_DATE,'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD')
				ORDER BY WAIT_NUM DESC
		) T
		GROUP BY T.TRM_CD
		     , T.RCP_NO
		     , T.WAIT_NUM
		     , T.PA_NO
		     , T.PA_NAME
		     , T.PA_REG
		     , T.PA_SEX
		     , T.DIV_CD
		     , T.DIV_NM
		     , T.WAITST_CD
		     , T.WAITST_NM
		     , T.WAIT_DT
	</select>
	
	<select id="selectRadiWaitList" parameterType="hashMap" resultType="int">
		WITH waitView 
            AS (
                SELECT  
                    RCP_NO
                    , MAX(WAIT_NUM) AS WAIT_NUM
                FROM    
                    V_WAIT_HIST
                GROUP BY  RCP_NO 
                )
        SELECT 
            count(*)
        FROM    
            V_WAIT_HIST A   
        INNER JOIN waitView B ON(A.RCP_NO = B.RCP_NO AND A.WAIT_NUM = B.WAIT_NUM)
        INNER JOIN TRM_CHART C ON(B.RCP_NO = C.RCP_NO)
        LEFT OUTER JOIN FILM_ORDER D ON(C.TRM_CD = D.TRM_CD)
        WHERE 1 = 1
        AND A.RCP_NO = #{rcpNo}
        AND A.DIV_CD = 'DV002'
        AND D.FILM_SELECTED IS NULL
        AND TO_CHAR(RCP_DATE,'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD')
	</select>
	
	<!-- 대기히스토리 추가(대기중->촬영중) -->
	<!-- map : {rcpNo=202302062, waitstCd=WS001, divCd=DV007} -->
	<insert id="modifyWaitListInsert" parameterType="hashMap">
		INSERT INTO 
			WAITING_HISTORY(
				WAIT_NO, RCP_NO, WAIT_DT, WAIT_NUM, WAITST_CD, DIV_CD
			)
		VALUES(
			SEQ_WAITING_HISTORY.Nextval
			,#{rcpNo}
			,SYSDATE
			,(SELECT NVL(MAX(WAIT_NUM),0)+1 FROM WAITING_HISTORY)
			,'WS005'
			,'DV002'
		)
	</insert>
	
	<!-- 대기히스토리 추가(촬영중->대기중, 영상촬영실->진료실) -->
	<!-- map : {rcpNo=202302062, waitstCd=WS001, divCd=DV007} -->
	<insert id="createWaitList" parameterType="hashMap">
		INSERT INTO 
			WAITING_HISTORY(
				WAIT_NO, RCP_NO, WAIT_DT, WAIT_NUM, WAITST_CD, DIV_CD
			)
		VALUES(
			SEQ_WAITING_HISTORY.Nextval
			,#{rcpNo}
			,SYSDATE
			,(SELECT NVL(MAX(WAIT_NUM),0)+1 FROM WAITING_HISTORY)
			,'WS001'
			,'DV001'
		)
	</insert>
	
	
	<!-- 
	map : {trmCd=TC0182, rcpNo=RCP0033, waitstCd=WS001, divCd=DV002, filmCd=MRI}
	대기히스토리 insert 되면서 촬영오더에 촬영여부 'Y' update 시키는 쿼리
	 -->
	<insert id="changeWaitListFilmOrderInsert" parameterType="hashMap">
		UPDATE FILM_ORDER
		SET    FILM_SELECTED = 'Y'
		WHERE  TRM_CD = #{trmCd} AND FILM_CD = #{filmCd}
	</insert>
	
	
	<!-- 대기상태 select option용 -->
	<select id="selectWaitStatus" resultType="WaitStatusVO">
		SELECT *	
		FROM WAIT_STATUS
	</select>
	<select id="selectFilmCate" resultType="FilmCateVO">
		SELECT *	
		FROM FILMCATE
	</select>
	<!-- 환자의 진료차트 목록 -->
	<select id="selectChartList" parameterType="string" resultType="WaitHistoryVO">
		SELECT
	        A.PA_NO
	        , A.PA_NAME
	        , A.PA_REG
	        , A.PA_HP
	        , A.PA_ZIP
	        , A.PA_ADD1
	        , A.PA_ADD2
	        , A.PA_PIYN
	        , A.PA_DELETE
	        , A.PA_SEX
	        , B.RCP_NO
	        , B.RCP_DATE
	        , B.OFFICE_CD
	        , C.TRM_CD
	        , C.MEDI_RECORD
	        , TO_CHAR(C.TRM_DT, 'YY/MM/DD') AS TRM_DT
	        , C.EMP_NO
		FROM RECEPTION B  
		INNER JOIN TRM_CHART C
		ON B.RCP_NO = C.RCP_NO
		LEFT OUTER JOIN PATIENT A
		ON B.PA_NO = A.PA_NO
		WHERE A.PA_NO = #{paNo,jdbcType=VARCHAR}  
		ORDER BY TRM_DT DESC
	</select>
	
	
	<!--  환자 진료차트  -->
	<resultMap type="TrmChartVO" id="trmChartMap" autoMapping="true">
		<id property="trmCd" column="TRM_CD" />
		<collection property="diagHistoryVOList" ofType="DiagHistoryVO" autoMapping="true">
			<id property="diseaseCd" column="DISEASE_CD"/>
		</collection>
		<collection property="symptomVOList" ofType="SymptomVO" autoMapping="true">
			<id property="symCd" column="SYM_CD"/>
		</collection>
		<collection property="prescriptionVOList" ofType="PrescriptionVO" autoMapping="true">
			<id property="preCd" column="PRE_CD"/>
		</collection>
		<collection property="filmOrderVOList" ofType="FilmOrderVO" autoMapping="true">
			<id property="filmCd" column="FILM_CD"/>
		</collection>
	</resultMap>
	<select id="selectTrmChart" parameterType="string" resultMap="trmChartMap">
		SELECT 
			Y.TRM_CD
			, Y.RCP_NO
			, Y.PA_NO
			, Y.PA_NAME
			, Y.DISEASE_CD
			, Y.ICD_NAME
			, Y.SYM_DETAIL
			, Y.MEDI_RECORD
			, Y.TRM_DT
			, Y.EMP_NO
			, Y.OPER_TF
			, Y.PHYSIOTHERAPY_TF
			, Y.SYM_CD
			, Y.SYM_DETAIL
			, Y.PRE_CD
			, Y.PRE_DETAIL
			, Y.PRE_NT
			, Y.PRE_TOTAL
			, Y.PRICE
			, Y.INJC_PTH_NM
			, Y.UNIT
			, Y.PAY_TP_NM
			, Y.FILM_DATE
			, LISTAGG(Y.FILM_CD,',') WITHIN GROUP(ORDER BY Y.FILM_CD) AS FILM_CD
		FROM
		(
			WITH trmChartView AS    (
			    SELECT  A.*, FN_GET_PA_NAME(B.RCP_NO) AS PA_NAME , B.PA_NO
			    FROM    TRM_CHART A INNER JOIN RECEPTION B ON (A.RCP_NO = B.RCP_NO)
			    WHERE   B.RCP_NO = #{rcpNo, jdbcType=VARCHAR}       
			)
			SELECT  
				T.TRM_CD
				, T.MEDI_RECORD
				, TO_CHAR(T.TRM_DT, 'YYYY/MM/DD') AS TRM_DT
				, T.EMP_NO
				, T.RCP_NO
				, T.PA_NO
				, T.PA_NAME
				, B.DISEASE_CD
				, B.ICD_NAME
				, B.OPER_TF
				, B.PHYSIOTHERAPY_TF
				, C.SYM_CD
				, C.SYM_DETAIL
				, D.PRE_CD
				, D.PRE_DETAIL
				, D.PRE_NT
				, D.PRE_TOTAL
				, D.PRICE
				, D.INJC_PTH_NM
				, D.UNIT
				, D.PAY_TP_NM
				, E.FILM_CD
				, E.FILM_DATE
			FROM    TRMCHARTVIEW T  
			        LEFT OUTER JOIN DIAGNOSIS_HISTORY B  ON (T.TRM_CD = B.TRM_CD)
			        LEFT OUTER JOIN SYMPTOM_HISTORY C ON (T.TRM_CD = C.TRM_CD)
			        LEFT OUTER JOIN PRESCRIPTION_HISTORY D ON (T.TRM_CD = D.TRM_CD)
			        LEFT OUTER JOIN FILM_ORDER E ON (T.TRM_CD = E.TRM_CD)
		)Y
			GROUP BY
				Y.TRM_CD
				, Y.RCP_NO
				, Y.PA_NO
				, Y.PA_NAME
				, Y.DISEASE_CD
				, Y.ICD_NAME
				, Y.SYM_DETAIL
				, Y.MEDI_RECORD
				, Y.TRM_DT
				, Y.EMP_NO
				, Y.OPER_TF
				, Y.PHYSIOTHERAPY_TF
				, Y.SYM_CD
				, Y.SYM_DETAIL
				, Y.PRE_CD
				, Y.PRE_DETAIL
				, Y.PRE_NT
				, Y.PRE_TOTAL
				, Y.PRICE
				, Y.INJC_PTH_NM
				, Y.UNIT
				, Y.PAY_TP_NM
				, Y.FILM_DATE
	</select>
	
	<!--  환자 진료차트  -->
	<select id="selectFilmChart" parameterType="string" resultMap="trmChartMap">
		SELECT 
			Y.TRM_CD
			, Y.RCP_NO
			, Y.PA_NO
			, Y.PA_NAME
			, Y.DISEASE_CD
			, Y.ICD_NAME
			, Y.SYM_DETAIL
			, Y.MEDI_RECORD
			, Y.TRM_DT
			, Y.EMP_NO
			, Y.OPER_TF
			, Y.PHYSIOTHERAPY_TF
			, Y.SYM_CD
			, Y.SYM_DETAIL
			, Y.PRE_CD
			, Y.PRE_DETAIL
			, Y.PRE_NT
			, Y.PRE_TOTAL
			, Y.PRICE
			, Y.INJC_PTH_NM
			, Y.UNIT
			, Y.PAY_TP_NM
			, Y.FILM_DATE
			, LISTAGG(Y.FILM_CD,',') WITHIN GROUP(ORDER BY Y.FILM_CD) AS FILM_CD
		FROM
		(
			WITH trmChartView AS    (
			    SELECT  A.*, FN_GET_PA_NAME(B.RCP_NO) AS PA_NAME , B.PA_NO
			    FROM    TRM_CHART A INNER JOIN RECEPTION B ON (A.RCP_NO = B.RCP_NO)
			    WHERE   B.RCP_NO = #{rcpNo, jdbcType=VARCHAR}       
			)
			SELECT  
				T.TRM_CD
				, T.MEDI_RECORD
				, TO_CHAR(T.TRM_DT, 'YYYY/MM/DD') AS TRM_DT
				, T.EMP_NO
				, T.RCP_NO
				, T.PA_NO
				, T.PA_NAME
				, B.DISEASE_CD
				, B.ICD_NAME
				, B.OPER_TF
				, B.PHYSIOTHERAPY_TF
				, C.SYM_CD
				, C.SYM_DETAIL
				, D.PRE_CD
				, D.PRE_DETAIL
				, D.PRE_NT
				, D.PRE_TOTAL
				, D.PRICE
				, D.INJC_PTH_NM
				, D.UNIT
				, D.PAY_TP_NM
				, E.FILM_CD
				, E.FILM_DATE
			FROM    TRMCHARTVIEW T  
			        LEFT OUTER JOIN DIAGNOSIS_HISTORY B  ON (T.TRM_CD = B.TRM_CD)
			        LEFT OUTER JOIN SYMPTOM_HISTORY C ON (T.TRM_CD = C.TRM_CD)
			        LEFT OUTER JOIN PRESCRIPTION_HISTORY D ON (T.TRM_CD = D.TRM_CD)
			        LEFT OUTER JOIN FILM_ORDER E ON (T.TRM_CD = E.TRM_CD)
		   WHERE E.FILM_SELECTED = 'Y'
		   ORDER BY TRM_DT
		)Y
			GROUP BY
				Y.TRM_CD
				, Y.RCP_NO
				, Y.PA_NO
				, Y.PA_NAME
				, Y.DISEASE_CD
				, Y.ICD_NAME
				, Y.SYM_DETAIL
				, Y.MEDI_RECORD
				, Y.TRM_DT
				, Y.EMP_NO
				, Y.OPER_TF
				, Y.PHYSIOTHERAPY_TF
				, Y.SYM_CD
				, Y.SYM_DETAIL
				, Y.PRE_CD
				, Y.PRE_DETAIL
				, Y.PRE_NT
				, Y.PRE_TOTAL
				, Y.PRICE
				, Y.INJC_PTH_NM
				, Y.UNIT
				, Y.PAY_TP_NM
				, Y.FILM_DATE
			
	</select>
	
	<!-- 환자 증상리스트 조회 -->
	<select id="selectSymptomList" parameterType="hashMap" resultType="kr.or.ddit.commons.vo.SymptomVO">
		SELECT
		    TRM_CD,
		    SYM_CD,
		    SYM_DETAIL
		FROM
		    SYMPTOM_HISTORY
		WHERE TRM_CD = #{trmCd}
	</select>
	
	<!-- 환자 상병리스트 조회 -->	
	<select id="selectDiagList" parameterType="hashMap" resultType="DiagHistoryVO">
		SELECT
		    TRM_CD,
		    DISEASE_CD,
		    ICD_NAME
		FROM
		    DIAGNOSIS_HISTORY
		WHERE TRM_CD = #{trmCd}
	</select>
	
	<!-- 촬영중/완료 환자 출력 -->
	<select id="selectXrayList" resultType="WaitHistoryVO" parameterType="hashMap">
		WITH waitView 
		    AS (
		        SELECT  RCP_NO, MAX(WAIT_NUM) AS WAIT_NUM
		        FROM    V_WAIT_HIST
		        GROUP   BY  RCP_NO 
		       )
	    SELECT 
	        C.TRM_CD
	        , A.RCP_NO
	        , A.RCP_DATE
	        , A.WAIT_NUM
	        , A.PA_NO
	        , A.PA_NAME
	        , A.PA_REG
	        , A.PA_SEX
	        , A.WAITST_NM
	        , A.WAITST_CD
	        , A.DIV_CD
	        , A.DIV_NM
	        , TO_CHAR(A.WAIT_DT, 'YYYY-MM-DD') AS WAIT_DT
	        , D.FILM_CD
	        , D.FILM_SELECTED
	        , TO_CHAR(D.FILM_DATE, 'YY/MM/DD') AS FILM_DATE
	    FROM    
	        V_WAIT_HIST A   
	    INNER JOIN  waitView B 
	    ON(A.RCP_NO = B.RCP_NO AND A.WAIT_NUM = B.WAIT_NUM)
	    LEFT OUTER JOIN TRM_CHART C ON(B.RCP_NO = C.RCP_NO)
	    LEFT OUTER JOIN FILM_ORDER D ON(C.TRM_CD = D.TRM_CD)
	    WHERE 
	        A.WAITST_CD = 'WS005'
	    AND D.FILM_SELECTED = 'Y'
	    AND TO_CHAR(A.RCP_DATE,'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD')
	    or A.WAITST_CD = 'WS008'
	    ORDER BY FILM_DATE
	</select>
	
	<select id="selectCheckFilmList" resultType="int">
		WITH waitView 
		    AS (
		        SELECT  RCP_NO, MAX(WAIT_NUM) AS WAIT_NUM
		        FROM    V_WAIT_HIST
		        GROUP   BY  RCP_NO 
		       )
		SELECT 
		    COUNT(*)
		FROM    
		    V_WAIT_HIST A   
		INNER JOIN  waitView B 
		ON(A.RCP_NO = B.RCP_NO AND A.WAIT_NUM = B.WAIT_NUM)
		LEFT OUTER JOIN TRM_CHART C ON(B.RCP_NO = C.RCP_NO)
		LEFT OUTER JOIN FILM_ORDER D ON(C.TRM_CD = D.TRM_CD)
		WHERE 
		    A.WAITST_CD = 'WS005'
		AND D.FILM_SELECTED = 'Y'
		AND TO_CHAR(A.RCP_DATE,'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD')
		AND D.FILM_DATE IS NULL	
		OR A.WAITST_CD = 'WS008'
	</select>
	
	<!-- 파일 업로드 -->
	<insert id="insertAttach" parameterType="kr.or.ddit.commons.vo.FilmAtchVO">
		<selectKey resultType="String" order="BEFORE" keyProperty="fiatCd">
			SELECT 'FC' || TRIM(NVL(TO_CHAR(SUBSTR(MAX(FIAT_CD),3)+1,'000'),'001'))
			FROM   FILM_ATCH
		</selectKey>
		INSERT INTO FILM_ATCH(
						FIAT_ORINM, FIAT_CD, FIAT_SAVENM, TRM_CD, FILM_CD, FAD_CD
					)
		VALUES(
			TO_CHAR(SYSDATE,'YYYY-MM-DD'),#{fiatCd},'',#{trmCd},#{filmCd},''
		)
	</insert>
	
	<!-- 파일 상세 업로드 -->	
	<insert id="insertAttaches" parameterType="java.util.List">
		<foreach open="INSERT ALL" collection="list" item="attach" index="idx" 
			close="SELECT * FROM DUAL" separator="">
			INTO FILM_ATCH_DETAIL(
					FIAT_CD
					, ATT_NO
					, ATT_STRE_COURS
					, ATT_SAVENAME
					, ATT_FILENAME
					, ATT_MIME
					, ATT_FILESIZE
					, ATT_FANCYSIZE
					, ATT_DOWNLOAD
				)
			VALUES(
				#{attach.fiatCd}
				,(SELECT NVL(MAX(ATT_NO),0)+1
		    FROM   
		    	FILM_ATCH_DETAIL
		    WHERE  
		    	FIAT_CD = #{attach.fiatCd})+${idx}
		    	,#{attach.attStreCours}
		    	,#{attach.attSavename}
		    	,#{attach.attFilename}
				,#{attach.attMime}
				,#{attach.attFilesize}
				,#{attach.attFancysize},0
			)
		</foreach>
	</insert>
	
<!-- 	 파일 업로드되면서 film_order에 날짜 update 시키기 --> 
	<insert id="updateFilmDate" parameterType="hashMap">
		UPDATE FILM_ORDER
		SET
		    FILM_DATE = SYSDATE
		WHERE
		    TRM_CD = #{trmCd,jdbcType=VARCHAR} AND FILM_CD = #{filmCd, jdbcType=VARCHAR}
	</insert>
	
	<select id="selectFilmAtchDetail" parameterType="string" resultType="FilmAtchDetailVO">
		SELECT  a.trm_cd, b.FIAT_CD, b.ATT_NO, b.ATT_STRE_COURS, b.ATT_SAVENAME, b.ATT_FILENAME, b.ATT_MIME, b.ATT_FILESIZE, b.ATT_FANCYSIZE, b.ATT_DOWNLOAD  
		FROM    FILM_ATCH A left outer join FILM_ATCH_DETAIL b on (A.FIAT_CD = B.FIAT_CD)
		                    inner join TRM_CHART c on (a.trm_cd = c.trm_cd)
		WHERE   c.rcp_no = #{rcpNo, jdbcType=VARCHAR}
		ORDER BY FIAT_CD DESC
	</select>
</mapper>